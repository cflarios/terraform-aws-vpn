#!/bin/bash

# Script to facilitate downloading WireGuard configurations
# Usage: ./download-configs.sh

echo "üîó Available WireGuard configurations:"
echo "=============================================="

CONFIG_DIR="{{ wireguard.config_dir }}"

# Show available configurations
echo "üìÅ Configuration directory: $CONFIG_DIR"
echo ""

if [ -d "$CONFIG_DIR" ]; then
    echo "üìã Available configuration files:"
    ls -la $CONFIG_DIR/peer*/ 2>/dev/null | grep -E '\.(conf|png)$' || echo "‚ö†Ô∏è  No peer configurations found"
    
    echo ""
    echo "üåê To download from your local machine:"
    echo "=========================================="
    
    # Show commands to download configurations
    for peer_dir in $CONFIG_DIR/peer*/; do
        if [ -d "$peer_dir" ]; then
            peer_name=$(basename "$peer_dir")
            
            # Desktop configuration
            if [ -f "$peer_dir/$peer_name.conf" ]; then
                echo "üì± Peer $peer_name (.conf file):"
                echo "   scp -i ~/.ssh/vpn-server-key ubuntu@{{ ansible_facts['ec2_public_ipv4'] | default(hostvars[inventory_hostname]['ansible_host']) }}:$peer_dir$peer_name.conf ./"
            fi
            
            # QR Code for mobile
            if [ -f "$peer_dir/$peer_name.png" ]; then
                echo "üì± Peer $peer_name (QR Code):"
                echo "   scp -i ~/.ssh/vpn-server-key ubuntu@{{ ansible_facts['ec2_public_ipv4'] | default(hostvars[inventory_hostname]['ansible_host']) }}:$peer_dir$peer_name.png ./"
            fi
            echo ""
        fi
    done
    
    echo "üåç HTTP server for download (port 8080):"
    echo "   http://{{ ansible_facts['ec2_public_ipv4'] | default(hostvars[inventory_hostname]['ansible_host']) }}:8080"
    echo ""
    echo "üìä Container status:"
    docker ps | grep wireguard
    
else
    echo "‚ùå Configuration directory not found"
fi
